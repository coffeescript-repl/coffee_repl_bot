// Generated by CoffeeScript 1.6.3
(function() {
  var isEvaluating, logs, sandbox, tids, util, vm,
    __slice = [].slice;

  util = require("util");

  vm = require("vm");

  isEvaluating = false;

  logs = [];

  tids = [];

  sandbox = {
    setTimeout: function() {
      var args, cb, delay;
      cb = arguments[0], delay = arguments[1], args = 3 <= arguments.length ? __slice.call(arguments, 2) : [];
      if (delay == null) {
        delay = 1000;
      }
      if (delay < 1000) {
        delay = 1000;
      }
      tids.push(setTimeout.apply(null, [cb, delay].concat(args)));
      return tids[tids.length - 1];
    },
    clearTimeout: clearTimeout,
    getTimerIDs: function() {
      return tids.slice(0);
    },
    console: {
      log: function() {
        var str;
        str = Array.prototype.map.call(arguments, function(v) {
          if (typeof v === "string") {
            return v;
          } else {
            return util.inspect(v);
          }
        }).join(", ");
        if (isEvaluating) {
          logs.push(str);
        } else {
          process.send([str]);
        }
        return void 0;
      }
    }
  };

  sandbox.global = sandbox;

  process.on("message", function(data) {
    var err;
    isEvaluating = true;
    try {
      logs.push(util.inspect(vm.runInNewContext(data, sandbox)));
    } catch (_error) {
      err = _error;
      logs.push("" + err);
    }
    process.send(logs);
    logs = [];
    return isEvaluating = false;
  });

}).call(this);

/*
//@ sourceMappingURL=shovel.map
*/
